name: Release

on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: ${{ matrix.env.os }}
    strategy:
      matrix:
        env:
          - { os: ubuntu-latest, target: x86_64-unknown-linux-gnu, postfix: '' }
          - { os: macos-latest, target: x86_64-apple-darwin, postfix: '' }
          - { os: windows-latest, target: x86_64-pc-windows-msvc, postfix: '.exe' }

    steps:
    - name: Check out repository
      uses: actions/checkout@v3

    # - name: Install Rust
    #   uses: actions-rs/toolchain@v1
    #   with:
    #     profile: minimal
    #     toolchain: stable
    #     override: true

    # - name: Set up target
    #   run: rustup target add ${{ matrix.env.target }}

    # - name: Build release binary
    #   uses: actions-rs/cargo@v1
    #   with:
    #     command: build
    #     args: --target ${{ matrix.env.target }} --release

    - name: mock
      run: mkdir -p target/${{ matrix.env.target }}/release/
    - name: mock
      run: echo ${{ matrix.env.target }} > target/${{ matrix.env.target }}/release/chatgpt-cli${{matrix.env.postfix}}

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: binary_${{ matrix.env.target }}
        path: target/${{ matrix.env.target }}/release/chatgpt-cli${{matrix.env.postfix}}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v3

    - run: ls -la binary_x86_64-apple-darwin
    - run: ls -la binary_x86_64-pc-windows-msvc
    - run: ls -la binary_x86_64-unknown-linux-gnu

    - name: release
      uses: actions/create-release@v1
      id: create_release
      with:
        draft: false
        prerelease: false
        tag_name: release_${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: the build binaries
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - run: echo ${{ steps.create_release.outputs.upload_url }}

    - name: upload linux artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: binary_x86_64-unknown-linux-gnu/chatgpt-cli
        asset_name: chatgpt-cli_x86_64-unknown-linux-gnu
        asset_content_type: application/octet-stream

    - name: upload darwin artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: binary_x86_64-apple-darwin/chatgpt-cli
        asset_name: chatgpt-cli_x86_64-apple-darwin
        asset_content_type: application/octet-stream

    - name: upload windows artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: binary_x86_64-pc-windows-msvc/chatgpt-cli.exe
        asset_name: chatgpt-cli_x86_64-pc-windows-msvc.exe
        asset_content_type: application/octet-stream
