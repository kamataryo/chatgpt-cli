name: Release

on:
  push:
    branch:
      - "main"

jobs:
  build:
    runs-on: ${{ matrix.env.os }}
    strategy:
      matrix:
        env:
          - { os: macos-latest, target: x86_64-apple-darwin, postfix: '' }
          - { os: ubuntu-latest, target: x86_64-unknown-linux-gnu, postfix: '' }
          - { os: windows-latest, target: x86_64-pc-windows-msvc, postfix: '.exe' }

    steps:
    - name: Check out repository
      uses: actions/checkout@v3

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true

    - name: Set up target
      run: rustup target add ${{ matrix.env.target }}

    - name: Build release binary
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --target ${{ matrix.env.target }} --release

    - run: mv target/${{ matrix.env.target }}/release/chatgpt-cli${{matrix.env.postfix}} ./chatgpt-cli_${{ matrix.env.target }}${{ matrix.env.postfix }}
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: binary-${{ matrix.env-target }}
        path: ./chatgpt-cli_${{ matrix.env.target }}${{ matrix.env.postfix }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v3

    - name: Combine artifacts
      run: |
        mkdir -p all
        for artifact in binary-*; do
          cp -R "$artifact" all/
        done

    - run: ls -la all
    # - name: Create Release
    #   id: create_release
    #   uses: actions/create-release@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     tag_name: latest
    #     release_name: Release ${{ github.ref }}
    #     draft: false
    #     prerelease: false

    # - name: Upload Release Asset
    #   uses: actions/upload-release-asset@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }}
    #     asset_path: ./combined/binary-${{ matrix.config.os }}.${{ matrix.config.extension }}
    #     asset_name: binary-${{ matrix.config.os }}.${{ matrix.config.extension }}
    #     asset_content_type: application/zip
